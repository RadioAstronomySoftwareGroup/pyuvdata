# Python package
# Create and test a Python package on multiple Python versions.

pool:
  vmImage: "macos-10.13"
strategy:
  matrix:
    Python27:
      PYTHON: '2.7'
    Python36:
      PYTHON: '3.6'
    Python37:
      PYTHON: '3.7'

steps:
- bash: echo "##vso[task.prependpath]$CONDA/bin"
  displayName: Add conda to PATH
- script: echo $(PYTHON)


# On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
# We need to take ownership if we want to update conda or install packages globally
- bash: sudo chown -R $USER $CONDA
  displayName: Take ownership of conda installation

- script: |
    conda config --set always_yes yes --set changeps1 no
    conda update -q conda
    conda config --add channels conda-forge
    conda clean -i
    conda clean --all
    conda info -a
    conda create -n pyuvdata_tests -f ci/pyuvdata_tests.yml python=$(PYTHON)
    source activate pyuvdata_tests
    conda list -n pyuvdata_tests
    PYVER=`python -c "from __future__ import print_function; import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
    echo $(PYTHON)
    echo $PYVER
    if [[ $PYVER != $PYTHON ]]; then
      exit 1;
    fi
  displayName: Create Anaconda environment

- bash: |
    source activate pyuvdata_tests
    pip install .
  displayName: install pyuvdata

- bash: |
    source activate pyuvdata_tests
    mkdir test-reports
    python -m pytest pyuvdata -v --cov=pyuvdata --cov-config=.coveragerc --cov-report xml:./coverage.xml --junitxml=test-reports/xunit.xml
  displayName: run tests

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'test-reports/*.xml'
  condition: succeededOrFailed()
